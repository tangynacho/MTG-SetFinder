import { Color } from "../IScry";
import MagicQuerier from "../util/MagicQuerier";
export interface CardSymbol {
    object: "card_symbol";
    symbol: string;
    loose_variant?: string | null;
    english: string;
    transposable: boolean;
    represents_mana: boolean;
    mana_value?: number | null;
    appears_in_mana_costs: boolean;
    funny: boolean;
    colors: Color[];
    gatherer_alternates?: string[] | null;
    svg_uri?: string | null;
}
export interface ManaCost {
    object: "mana_cost";
    cost: string;
    cmc: number;
    colors: Color[];
    colorless: boolean;
    monocolored: boolean;
    multicolored: boolean;
}
declare class Symbology extends MagicQuerier {
    all(): Promise<CardSymbol[]>;
    parseMana(shorthand: string): Promise<ManaCost>;
}
declare const _default: Symbology;
export default _default;
